@model SaleBillMainVM
@{
    ViewData["Title"] = "كاشير";
}
<style>
    .order-input-container {
        /* margin: 15px 0;
                display: flex;
                flex-direction: column;
                max-width: 300px; */
        text-align: center;
    }

        .order-input-container label {
            font-weight: bold;
            margin-bottom: 5px;
            /* color: #333; */
            margin-left: 20px;
        }

        .order-input-container input {
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            transition: border-color 0.3s, box-shadow 0.3s;
        }

            .order-input-container input:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
                outline: none;
            }

    /* Product Filter Styles */
    .product-filter {
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border: 1px solid #e9ecef;
        border-radius: 12px;
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
    }

    .filter-btn {
        font-weight: 600;
        font-size: 14px;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: 2px solid;
        background: transparent;
        border-radius: 8px;
        cursor: pointer;
        padding: 12px 20px;
        position: relative;
        overflow: hidden;
        min-width: 80px;
        text-align: center;
        white-space: nowrap;
    }

        .filter-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .filter-btn:hover::before {
            left: 100%;
        }

        .filter-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.15);
        }

        .filter-btn.active {
            /* color: rgba(0,0,0,0.25) !important; */
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.25);
        }

        .filter-btn[data-filter="all"] {
            border-color: #007bff;
            color: #007bff;
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        }

            .filter-btn[data-filter="all"]:not(.active) {
                background: transparent;
            }

        .filter-btn[data-filter="meat"] {
            border-color: #dc3545;
            color: #dc3545;
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        }

            .filter-btn[data-filter="meat"]:not(.active) {
                background: transparent;
            }

        .filter-btn[data-filter="chicken"] {
            border-color: #28a745;
            color: #28a745;
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
        }

            .filter-btn[data-filter="chicken"]:not(.active) {
                background: transparent;
            }

        .filter-btn[data-filter="mixed"] {
            border-color: #ffc107;
            color: #ffc107;
            background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
        }

            .filter-btn[data-filter="mixed"]:not(.active) {
                background: transparent;
            }

        .filter-btn.active[data-filter="all"] {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        }

        .filter-btn.active[data-filter="meat"] {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        }

        .filter-btn.active[data-filter="chicken"] {
            background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%);
        }

        .filter-btn.active[data-filter="mixed"] {
            background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
        }

    /* Delivery Button Styles */
    .delivery-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(111, 66, 193, 0.4);
    }

    .delivery-btn:active {
        transform: translateY(0);
    }

    /* Delivery Modal Styles */
    .delivery-modal {
        backdrop-filter: blur(5px);
    }

    .delivery-area-card {
        background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 15px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }

        .delivery-area-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(111, 66, 193, 0.1), transparent);
            transition: left 0.5s;
        }

        .delivery-area-card:hover::before {
            left: 100%;
        }

        .delivery-area-card:hover {
            transform: translateY(-5px);
            border-color: #6f42c1;
            box-shadow: 0 8px 25px rgba(111, 66, 193, 0.2);
        }

        .delivery-area-card:active {
            transform: translateY(-2px);
        }

    .delivery-area-name {
        font-size: 16px;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
    }

    .delivery-area-price {
        font-size: 18px;
        font-weight: 700;
        /* color: #6f42c1; */
        background: linear-gradient(135deg, #6f42c1, #5a32a3);
        -webkit-background-clip: text;
        /* -webkit-text-fill-color: transparent; */
        background-clip: text;
    }

    .delivery-area-card:hover .delivery-area-name {
        color: #6f42c1;
    }

    #deliverySearch:focus {
        border-color: #6f42c1;
        box-shadow: 0 0 0 3px rgba(111, 66, 193, 0.1);
    }

    /* Customer Form Delivery Fields Styling */
    .FormControll {
        margin-bottom: 15px;
    }

        .FormControll label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }

        .FormControll .input-container {
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .FormControll .input-container input[type="text"] {
                flex: 1;
                padding: 10px 12px;
                border: 2px solid #e0e0e0;
                border-radius: 8px;
                font-size: 14px;
                transition: all 0.3s ease;
                background-color: #f8f9fa;
            }

                .FormControll .input-container input[type="text"]:focus {
                    outline: none;
                    border-color: #6f42c1;
                    box-shadow: 0 0 0 3px rgba(111, 66, 193, 0.1);
                    background-color: white;
                }

            .FormControll .input-container button {
                padding: 10px 12px;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.3s ease;
                display: flex;
                align-items: center;
                justify-content: center;
                min-width: 45px;
            }

                .FormControll .input-container button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 12px rgba(111, 66, 193, 0.3);
                }

                .FormControll .input-container button:active {
                    transform: translateY(0);
                }

    /* Delivery Time Input Styling */
    #customerDeliveryTime {
        width: 100%;
        padding: 10px 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        background-color: #f8f9fa;
        cursor: pointer;
    }

        #customerDeliveryTime:focus {
            outline: none;
            border-color: #6f42c1;
            box-shadow: 0 0 0 3px rgba(111, 66, 193, 0.1);
            background-color: white;
        }

        #customerDeliveryTime:hover {
            border-color: #6f42c1;
            background-color: white;
        }

    /* Form Section Styling */
    .form_wapper {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 0;
    }

    .form-row {
        display: grid;
        gap: 20px;
        padding: 0;
        margin-bottom: 20px;
    }

    .form-row.first-row {
        grid-template-columns: 1fr 1fr;
        display: grid !important;
    }

    .form-row.second-row {
        grid-template-columns: 1fr 1fr 1fr 1fr;
        display: grid !important;
    }

    .form-column {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }


    /* Button Hover Effects */
    .Buttons button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .Buttons button:active {
        transform: translateY(0);
    }

    .Buttons button[onclick="addNewCustomer()"]:hover {
        background: linear-gradient(135deg, #5a32a3, #4a2a8a) !important;
        box-shadow: 0 4px 12px rgba(111, 66, 193, 0.4);
    }

    .Buttons button[id="closeModel"]:hover {
        background: #d0d0d0 !important;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }

    /* Add Button Hover Effects */
    .add-button:hover {
        background: #218838 !important;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
    }

    .add-button:active {
        transform: translateY(0);
    }

    /* Modal Z-Index Fix */
    #modal[data-modal="add-coustomer"] {
        z-index: 10000;
    }
</style>
<div class="container">
    <div class="Sidebar">
        <div class="overlay"></div>
        <div class="Sidebar_content" style="background-color:lightgray;">
            <div class="close_sidebar">
                <i class="fa-solid fa-xmark"></i>
            </div>
            <audio id="errorSound" src="~/sounds/errorsound.mp3" preload="auto" style="display:none;"></audio>
            <div class="Logo">
                <img src="~/assets/images/NaseerMandi.jpeg" alt="Logo" width="100%" height="100%" />
            </div>
            <div class="SidebarList">
                <ul id="dagagHolesSidebar">
                    <li style="text-align:center;">
                        <h2 style="color:red;">حفر الدجاج</h2>
                    </li>
                    @foreach (var dagagHole in Model.DagagHoleDataVM)
                    {
                        <li style="text-align:center;border-radius: 10px;background-color: white;">
                            <h3>@dagagHole.Name</h3>
                            <div>
                                @if (dagagHole.EndTime != null)
                                {
                                    <h4> الفتح  : @dagagHole.EndTime</h4>
                                }
                                else
                                {
                                    <h4> الفتح : ____</h4>
                                }
                                <h4 style="color:red;">العدد : @dagagHole.Amount</h4>
                            </div>
                        </li>
                    }
                    <li style="text-align:center;border-radius: 10px;background-color: black;color:white;">
                        <h3>المجموع</h3>
                        <div>
                            <h4>العدد : @Model.DagagHoleDataVM.Sum(d => d.Amount)</h4>
                        </div>
                    </li>
                </ul>
                <ul id="meatHolesSidebar">
                    <li style="text-align:center;">
                        <h2 style="color:red;">حفر اللحم</h2>
                    </li>
                    @foreach (var meatHole in Model.MeatHoleDataVM)
                    {
                        <li style="text-align:center;border-radius: 10px;background-color: white;">
                            <h3>@meatHole.Name</h3>
                            <div>
                                @if (meatHole.EndTime != null)
                                {
                                    <h4> الفتح : @meatHole.EndTime</h4>
                                }
                                else
                                {
                                    <h4> الفتح : ____</h4>
                                }
                                <h4 style="color:red;">عدد النفر : @meatHole.NafrAmount</h4>
                                <h4 style="color:red;">عدد نص النفر : @meatHole.HalfNafrAmount</h4>
                            </div>
                        </li>
                    }
                    <li style="text-align:center;border-radius: 10px;background-color: black;color:white;">
                        <h3>المجموع</h3>
                        <div>
                            <h4>عدد النفر : @Model.MeatHoleDataVM.Sum(d => d.NafrAmount)</h4>
                            <h4>عدد نص النفر : @Model.MeatHoleDataVM.Sum(d => d.HalfNafrAmount)</h4>
                        </div>
                    </li>
                </ul>
                <div class="Logout">
                    <a asp-area="Auth" asp-controller="Login" asp-action="LogOut">تسجيل الخروج</a>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="content_wapper">
            <header style="background: transparent">
                <div class="header_content">
                    <div style="display: flex;align-items: center;flex-wrap: wrap;gap: 10px;">
                        <i class="fa-solid fa-bars-staggered menu-slider"></i>
                        <button class="button" onclick="printDaySales()"> طباعة فواتير اليوم</button>
                        <button class="button" id="reactionary">تعديل فواتير</button>
                        <a asp-action="AllDayBill" asp-controller="SaleBill">
                            <button class="button">
                                فواتير اليوم
                            </button>
                        </a>

                    </div>
                    <i class="fa-solid fa-list icon"></i>
                </div>

                <!-- the reactionary -->
                <div id="modal" class="add-reactionary">
                    <div class="modal-content">
                        <div class="close_modal">
                            <i class="fa-solid fa-xmark"></i>
                        </div>
                        <button id="new-reactionary">اضافة</button>
                        <!-- Add new -->
                        <div class="reactionary">
                            <div class="form-reactionary">
                                <form>
                                    <select asp-items="@(new SelectList(Model.SaleBills, "Id", "Name"))" class="billId">
                                        <option value="">اختار فاتورة</option>
                                    </select>
                                    <select asp-items="@(new SelectList(Model.Products, "Id", "Name"))" class="productId">
                                        <option value="">اختار الصنف</option>
                                    </select>
                                    <input type="hidden" class="categoryId" />
                                    <input type="text" class="price" placeholder="السعر" readonly />
                                    <input type="text" class="amount" placeholder="الكمية" value="1" />
                                    <input type="text" class="discount" placeholder="الخصم" value="0" />
                                    <input type="text" class="total" placeholder="السعر الكلي" readonly />
                                    <button type="button">اضافة</button>
                                </form>
                            </div>
                            <div class="reactionary_wapper">
                                @foreach (var saleBill in Model.SaleBillRefundVM)
                                {
                                    <div class="reactionary-button">
                                        <input type="hidden" value="@saleBill.Id" class="saleBillId" />
                                        <input type="hidden" value="@saleBill.BillType" class="refundBillType" />
                                        <button>  فاتورة @saleBill.Id</button>
                                        <i class="fa-solid fa-print print"></i>
                                    </div>

                                    <div class="reactionary-decs">
                                        <div class="item">
                                            <span style="width:150px;height:auto;text-align:center;display: block;"> الصنف</span>
                                            <span style="width:70px;height:auto;text-align:center; display: block;"> السعر</span>
                                            <span style="width:70px;height:auto;text-align:center; display: block;"> الكمية</span>
                                            <span style="width:70px;height:auto;text-align:center; display: block;"> الخصم</span>
                                            <span style="width:70px;height:auto;text-align:center; display: block;"> السعر الكلي</span>
                                            <span style="width:auto;height:auto;text-align:center; display: block;"> حذف</span>
                                        </div>
                                        @foreach (var itemDetails in saleBill.BillDetailRegisterVM)
                                        {
                                            <div class="item">
                                                <input type="hidden" value="@itemDetails.ProductId" class="productId" />
                                                <span class="productName" style="width:150px;height:auto;text-align:center;display: block;"> @itemDetails.PName</span>
                                                <span class="price" style="width:70px;height:auto;text-align:center;display: block;"> @itemDetails.Price</span>
                                                <input type="text" class="amount" value="@itemDetails.Amount" style="width:70px;height:30px;text-align:center" />
                                                <input type="text" class="discount" value="@itemDetails.Discount" style="width:70px;height:30px;text-align:center" />
                                                <span class="total" style="width:70px;height:auto;text-align:center;display: block;"> @itemDetails.TotalPrice</span>
                                                <span style="width:auto;height:auto;text-align:center; display: block;">
                                                    <button class="delete-btn">
                                                        <i class="fa-solid fa-trash"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        }

                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Drawer for header Cashier -->
                <div id="Drawer">
                    <div class="Drawer_wapper">
                        <div class="Drawer_content">
                            <div class="close">
                                <i class="fa-solid fa-xmark"></i>
                            </div>
                            <div>
                                <ul class="menu_list">
                                    <a asp-action="DeliveryBill" asp-controller="SaleBill">
                                    <li>طلبات دليفري الشركات</li>
                                    </a>
                                    <a asp-action="ResturantDelivery" asp-controller="SaleBill">
                                    <li>طلبات دليفري المطعم</li>
                                    </a>
                                    <a asp-action="CustomerRecieve" asp-controller="SaleBill">
                                    <li>طلبات الحجز المسبق</li>
                                    </a>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
            <div class="wapper">
                <!-- Checkout -->
                <div class="Checkout">
                    <div class="Checkout_content">
                        <div class="title">
                            <h3>تفاصيل الفاتورة</h3>
                            @* <i class="fa-solid fa-trash icon"></i> *@
                        </div>
                        <!-- list Checkout -->
                        <div class="List">
                            <div class="item">
                                <button onclick="selectBillType(this)">حجز مسبق</button>
                                <input type="radio" name="billType" value="4" checked onclick="selectBillType(this)" style="margin-right:35px;" />
                            </div>
                            <div class="item">
                                <button onclick="selectBillType(this)">سفري</button>
                                <input type="radio" name="billType" value="1" checked onclick="selectBillType(this)" style="margin-right:35px;" />
                            </div>
                            <div class="item">
                                <button onclick="selectBillType(this)">دليفري شركات</button>
                                <input type="radio" name="billType" value="2" onclick="selectBillType(this)" style="margin-right:35px;" />
                            </div>
                            <div class="item">
                                <button onclick="selectBillType(this)">دليفري مطعم</button>
                                <input type="radio" name="billType" value="3" onclick="selectBillType(this)" style="margin-right:35px;" />
                            </div>
                        </div>

                        <!-- for delivery -->
                        <div class="choose-Delivery">
                            <button type="button" class="addCustomer">اضافة العميل</button>
                            <div class="company-delivery">
                                <select id="deliveryId">
                                    <option value="">اختر شركة التوصيل</option>
                                    @foreach (var item in Model.Deliveries)
                                    {
                                        <option value="@item.Id"
                                                data-logo="@item.ImageUrl"
                                                data-color="@item.Color">
                                            @item.Name
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>

                        <!-- for Tables -->
                        @* <div class="add-Tables">
                            <button type="button" class="chooseTable">إختيار الحفر</button>
                            <ul id="selectedHoles">
                            </ul>
                        </div> *@

                        <div class="order-input-container" style="display:none">
                            <label for="orderNumber">رقم الطلب : </label>
                            <input type="text" id="orderNumber" name="orderNumber" placeholder="ادخل رقم الطلب" />
                        </div>


                        <!-- <hr /> -->
                        <!-- product Checkout -->
                        <div class="product" id="productList">
                        </div>

                        <div class="total">
                            <div class="total_wapper">
                                <p>اجمالي الطلب</p>
                                <div class="total_item">
                                    <p>الخصم</p>
                                    <input type="text" value="0" style="width:70px;height:30px;text-align:center" />
                                </div>
                                <div class="total_item">
                                    <p>ضريبة القيمة المضافة</p>
                                    <input type="text" value="0" style="width:70px;height:30px;text-align:center" />%
                                </div>

                                <div class="total_item">
                                    <p>الصافي</p>
                                    <span id="finalTotal">0</span>
                                </div>
                                <div class="total_item" id="customerName">
                                    <p>العميل</p>
                                    <span></span>
                                    <input type="hidden" />
                                </div>
                                @* <div class="total_item" id="customerReceive">
                                    <p>استلام العميل</p>
                                    <input type="checkbox" style="width:20px;height:20px;"/>
                                </div> *@
                                <div class="total_item orderDeliveredTime" id="orderDeliveredTime">
                                    <p>وقت الاستلام</p>
                                    @* <input type="time" style="width:120px;height:30px;text-align:center" /> *@
                                    <input id="timePicker" type="text" style="width:120px;height:30px;text-align:center" readonly />
                                    @* value="@DateTime.Now.ToString("HH:mm")" *@
                                </div>

                                <div class="total_item open" id="gift">
                                    <p>تعيين كهدية</p>
                                    <input type="checkbox" style="width:20px;height:20px;" />
                                </div>
                                <div class="total_item">
                                    <p>ملاحظات</p>
                                    <textarea id="notes"></textarea>
                                </div>
                            </div>
                            <button type="button" onclick="CreateBill()" id="btn_save">انشاء الطلب</button>
                            @* <button type="button" onclick="CreateTempBill()"> حفظ كمؤقت</button> *@
                        </div>
                        <!-- End Product -->
                    </div>

                    <!-- Form Add Coustomer-->
                    <div id="modal" data-modal="add-coustomer">
                        <div class="modal-content" style="max-width: 800px; width: 95%; max-height: 90vh; overflow-y: auto;">
                            <div class="close_modal">
                                <i class="fa-solid fa-xmark"></i>
                            </div>
                            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; border-bottom: 2px solid #f0f0f0; padding-bottom: 15px;">
                                <h3 style="margin: 0; color: #333; font-size: 20px;">
                                    <i class="fa-solid fa-user-plus" style="margin-left: 8px; color: #6f42c1;"></i>
                                    إضافة عميل جديد
                                </h3>
                                <button style="width:80px;height:38px; background: #6f42c1;margin-left: 50px; color: white; border: none; border-radius: 4px; cursor: pointer;" onclick="pasteClipboardContent()">
                                    Paste
                                </button>
                            </div>
                            <form method="post" id="customerForm">
                                <div class="form_wapper" style="display: flex; flex-direction: column; gap: 20px; padding: 0;">
                                    <!-- الصف الأول - التوصيل والوقت -->
                                    <div class="form-row first-row" style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; padding: 0; margin-bottom: 20px;">
                                        <div id="AreaPricing" class="form-column" style="display: none; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" style="margin-bottom: 15px;">
                                                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">منطقة التوصيل</label>
                                                <div class="input-container" style="display: flex; align-items: center; gap: 8px;">
                                                    <input type="text" asp-for="CustomerRegisterVM.DeliveryRegion" id="customerDeliveryRegion" placeholder="اختر منطقة التوصيل" readonly style="flex: 1; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                    <button type="button" onclick="openDeliveryModalForCustomer()" style="height: 35px;background: #6f42c1; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer;">
                                                        <i class="fa-solid fa-truck"></i>
                                                    </button>
                                                </div>
                                                    <span id="deliveryRegionVal" class="text-danger" style="display:none;">
                                                        <i id="deliveryRegionLamp" class="fas fa-lightbulb" style="font-size:25px;"></i>
                                                    </span>
                                            </div>
                                        </div>

                                        <div id="customerDeliveryTimePop" class="form-column" style="display: none; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" style="margin-bottom: 15px;">
                                                <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">وقت الاستلام</label>
                                                <input type="text" asp-for="CustomerRegisterVM.OrderDeliveredTime" id="customerDeliveryTime" placeholder="اختر وقت الاستلام" readonly style="width: 100%; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa; cursor: pointer;" />
                                                <span id="deliveredTimeVal" class="text-danger" style="display:none;">
                                                    <i id="deliveredTimeLamp" class="fas fa-lightbulb" style="font-size:25px;"></i>
                                                </span>
                                            </div>

                                        </div>
                                    </div>

                                    <!-- الصف الثاني - بيانات العميل -->
                                    <div class="form-row second-row" style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr; gap: 20px; padding: 0; margin-bottom: 20px;">
                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Phone" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">رقم الهاتف</label>
                                                <input type="text"
                                                       onkeypress="if (isNaN(this.value + String.fromCharCode(event.keyCode))) return false;"
                                                       asp-for="CustomerRegisterVM.Phone"
                                                       maxlength="11"
                                                       onchange="GetCustomerData(),validatePhone();"
                                                       onkeyup="validatePhone();"
                                                       required 
                                                       style="width: 100%; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                <span id="phoneVal" class="text-danger" style="display:none;">
                                                    <i id="phoneLamp" class="fas fa-lightbulb" style="font-size:25px;"></i>
                                                </span>
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Name" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">اسم العميل</label>
                                                <input type="text" asp-for="CustomerRegisterVM.Name" onkeyup="validateName();" onchange="validateName();" required style="width: 100%; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                <span id="nameVal" class="text-danger" style="display:none;">
                                                    <i id="nameLamp" class="fas fa-lightbulb" style="font-size:25px;"></i>
                                                </span>
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.AnotherPhone" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">رقم الهاتف اخر</label>
                                                <input type="text" onkeypress="if (isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;"
                                                       asp-for="CustomerRegisterVM.AnotherPhone" maxlength="11" 
                                                       style="width: 100%; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" id="address1" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Address" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">العنوان الرئيسي</label>
                                                <div class="input-container" style="display: flex; align-items: center; gap: 8px;">
                                                    <input type="text" asp-for="CustomerRegisterVM.Address" onkeyup="validateAddress();" onchange="validateAddress();" required placeholder="أدخل العنوان الرئيسي" style="flex: 1; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                    <input type="checkbox" style="width:16px;height:16px;padding:0; cursor: pointer;" checked />
                                                    <button type="button" class="add-button" style="background: #28a745; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-weight: bold;">+</button>
                                                </div>
                                                <span id="addressVal" class="text-danger" style="display:none;">
                                                    <i id="addressLamp" class="fas fa-lightbulb" style="font-size:25px;"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- الصف الثالث - العناوين الإضافية -->
                                    <div class="form-row second-row" style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr; gap: 20px; padding: 0; margin-bottom: 20px;">
                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" id="address2" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Address2" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">عنوان إضافي 2</label>
                                                <div class="input-container" style="display: flex; align-items: center; gap: 8px;">
                                                    <input type="text" asp-for="CustomerRegisterVM.Address2" placeholder="عنوان إضافي (اختياري)" style="flex: 1; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                    <input type="checkbox" style="width:16px;height:16px; cursor: pointer;" />
                                                    <button type="button" class="add-button" style="background: #28a745; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-weight: bold;">+</button>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" id="address3" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Address3" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">عنوان إضافي 3</label>
                                                <div class="input-container" style="display: flex; align-items: center; gap: 8px;">
                                                    <input type="text" asp-for="CustomerRegisterVM.Address3" placeholder="عنوان إضافي (اختياري)" style="flex: 1; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                    <input type="checkbox" style="width:16px;height:16px; cursor: pointer;" />
                                                    <button type="button" class="add-button" style="background: #28a745; color: white; border: none; padding: 8px 12px; border-radius: 4px; cursor: pointer; font-weight: bold;">+</button>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <div class="FormControll" id="address4" style="margin-bottom: 15px;">
                                                <label asp-for="CustomerRegisterVM.Address4" style="display: block; margin-bottom: 8px; font-weight: 600; color: #333; font-size: 14px;">عنوان إضافي 4</label>
                                                <div class="input-container" style="display: flex; align-items: center; gap: 8px;">
                                                    <input type="text" asp-for="CustomerRegisterVM.Address4" placeholder="عنوان إضافي (اختياري)" style="flex: 1; padding: 10px 12px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 14px; transition: all 0.3s ease; background-color: #f8f9fa;" />
                                                    <input type="checkbox" style="width:16px;height:16px; cursor: pointer;" />
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-column" style="display: flex; flex-direction: column; gap: 15px;">
                                            <!-- عمود فارغ للتوازن -->
                                        </div>
                                    </div>
                                </div>
                                <div class="Buttons" style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px; padding-top: 20px; border-top: 2px solid #f0f0f0;">
                                    <button type="button" id="closeModel" style="padding: 10px 20px; background: #e0e0e0; color: #333; border: none; border-radius: 8px; cursor: pointer; font-weight: 600; transition: all 0.3s ease;">إلغاء</button>
                                    <button type="button" onclick="addNewCustomer()" style="padding: 10px 20px; background: linear-gradient(135deg, #6f42c1, #5a32a3); color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 600; transition: all 0.3s ease;">إضافة العميل</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>


                <div id="modal" class="tableModel" data-modal="add-table">
                    <div class="modal-content">
                        <div class="close_modal">
                            <i class="fa-solid fa-xmark"></i>
                        </div>
                        <div class="wapper">
                            <!-- List Merge Tables -->
                            <div class="Tables">
                                <div class="Tables_content">
                                    <!-- List -->
                                    <div class="ListTables">
                                        <div class="Tables_Table">
                                            <div class="table_title">
                                                <h2>حفر دجاج</h2>
                                            </div>
                                            <div class="table_item" id="dagagHolesData">
                                                @foreach (var dagagHole in Model.DagagHoleDataVM)
                                                {
                                                    <div class="table_item_table">
                                                        <img src="~/assets/images/hole2.jpg"
                                                             alt="table"
                                                             loading="lazy" />
                                                        <div>
                                                            <h3>@dagagHole.Name</h3>
                                                            @if (dagagHole.EndTime != null)
                                                            {
                                                                <h5> الفتح  : @dagagHole.EndTime</h5>
                                                            }
                                                            else
                                                            {
                                                                <h5> الفتح : ____</h5>
                                                            }
                                                            <h5>العدد : @dagagHole.Amount</h5>
                                                            <input type="checkbox" data-id="@dagagHole.Id" data-name="@dagagHole.Name" />
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="ListTables">
                                        <div class="Tables_Table">
                                            <div class="table_title">
                                                <h2>حفر لحم</h2>
                                            </div>
                                            <div class="table_item" id="meatHolesData">
                                                @foreach (var meatHole in Model.MeatHoleDataVM)
                                                {
                                                    <div class="table_item_table">
                                                        <img src="~/assets/images/hole2.jpg"
                                                             alt="table"
                                                             loading="lazy" />
                                                        <div>
                                                            <h3>@meatHole.Name</h3>
                                                            @if (meatHole.EndTime != null)
                                                            {
                                                                <h5> الفتح : @meatHole.EndTime</h5>
                                                            }
                                                            else
                                                            {
                                                                <h5> الفتح : ____</h5>
                                                            }
                                                            <h5>عدد النفر : @meatHole.NafrAmount</h5>
                                                            <h5>عدد نص النفر : @meatHole.HalfNafrAmount</h5>
                                                            <input type="checkbox" data-id="@meatHole.Id" data-name="@meatHole.Name" />
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <!-- end List -->
                                </div>
                            </div>
                        </div>

                        <div class="Buttons" style="padding-top:20px !important">
                            <button type="submit" onclick="addSelectedHoles()">اضافة</button>
                            <button type="button">الغاء</button>
                        </div>
                    </div>
                </div>

                <!-- Pickup Time Modal -->
                <div id="pickupTimeModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 2147483647; justify-content: center; align-items: center;">
                    <div style="background: white; border-radius: 12px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 10px 30px rgba(0,0,0,0.25); position: relative; z-index: 2147483647;">
                        <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:10px;">
                            <h3 style="margin:0;font-size:22px;">تحديد وقت الاستلام</h3>
                            <button id="closePickupTimeModal" style="background:none;border:none;font-size:22px;cursor:pointer;color:#666;">
                                <i class="fa-solid fa-xmark"></i>
                            </button>
                        </div>
                        <div style="display:flex; gap: 12px; align-items:center; justify-content:center; margin: 18px 0;">
                            <span style="font-size:18px;">الساعات</span>
                            <span style="font-size:18px;">:</span>
                            <select id="pickupHour" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;">
                            </select>
                            <span style="font-size:18px;">الدقائق</span>
                            <span style="font-size:18px;">:</span>
                            <select id="pickupMinute" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;">
                                <option value="00">00</option>
                                <option value="15">15</option>
                                <option value="30">30</option>
                                <option value="45">45</option>
                            </select>
                            <select id="pickupPeriod" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;">
                                @* <option value="صباحا">صباحا</option> *@
                                <option value="مساءا">مساءا</option>
                            </select>
                        </div>
                        <div style="display:flex; gap:10px; justify-content:flex-end;">
                            <button id="confirmPickupTime" style="background:#6f42c1;color:#fff;border:none;border-radius:8px;padding:10px 16px;cursor:pointer;font-size:16px;">تأكيد</button>
                            <button id="cancelPickupTime" style="background:#e0e0e0;color:#333;border:none;border-radius:8px;padding:10px 16px;cursor:pointer;font-size:16px;">إلغاء</button>
                        </div>
                    </div>
                </div>

                <!-- Delivery Areas Modal -->
                <div id="deliveryModal" class="delivery-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 10000; justify-content: center; align-items: center;">
                    <div class="delivery-modal-content" style="background: white; border-radius: 15px; padding: 25px; max-width: 600px; width: 90%; max-height: 80vh; overflow-y: auto; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; border-bottom: 2px solid #f0f0f0; padding-bottom: 15px;">
                            <h3 style="margin: 0; color: #333; font-size: 24px;">
                                <i class="fa-solid fa-truck" style="margin-left: 10px; color: #6f42c1;"></i>
                                مناطق التوصيل
                            </h3>
                            <button id="closeDeliveryModal" style="background: none; border: none; font-size: 24px; color: #999; cursor: pointer; padding: 5px;">
                                <i class="fa-solid fa-xmark"></i>
                            </button>
                        </div>

                        <!-- Search Box -->
                        <div style="margin-bottom: 20px;">
                            <input type="text" id="deliverySearch" placeholder="البحث في المناطق..."
                                   style="width: 100%; padding: 12px 15px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px; outline: none; transition: border-color 0.3s;"
                                   onkeyup="filterDeliveryAreas()">
                        </div>

                        <!-- Delivery Areas Grid -->
                        <div id="deliveryAreasGrid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 15px;">
                            <!-- Areas will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Customer Delivery Areas Modal -->
                <div id="customerDeliveryModal" class="delivery-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 10002; justify-content: center; align-items: center;">
                    <div class="delivery-modal-content" style="background: white; border-radius: 15px; padding: 25px; max-width: 600px; width: 90%; max-height: 80vh; overflow-y: auto; box-shadow: 0 10px 30px rgba(0,0,0,0.3);">
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; border-bottom: 2px solid #f0f0f0; padding-bottom: 15px;">
                            <h3 style="margin: 0; color: #333; font-size: 24px;">
                                <i class="fa-solid fa-truck" style="margin-left: 10px; color: #6f42c1;"></i>
                                مناطق التوصيل للعميل
                            </h3>
                            <button id="closeCustomerDeliveryModal" style="background: none; border: none; font-size: 24px; color: #999; cursor: pointer; padding: 5px;">
                                <i class="fa-solid fa-xmark"></i>
                            </button>
                        </div>

                        <!-- Search Box -->
                        <div style="margin-bottom: 20px;">
                            <input type="text" id="customerDeliverySearch" placeholder="البحث في المناطق..."
                                   style="width: 100%; padding: 12px 15px; border: 2px solid #e0e0e0; border-radius: 8px; font-size: 16px; outline: none; transition: border-color 0.3s;"
                                   onkeyup="filterCustomerDeliveryAreas()">
                        </div>

                        <!-- Delivery Areas Grid -->
                        <div id="customerDeliveryAreasGrid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 15px;">
                            <!-- Areas will be loaded here -->
                        </div>
                    </div>
                </div>
                <!-- End Checkout -->
                <!-- List Items -->
                <section>
                    <!-- Product Filter -->
                    <div class="product-filter" style="margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 8px;">
                        <div style="display: flex; align-items: center; justify-content: space-between; flex-wrap: wrap; gap: 15px;">

                            <!-- أزرار الفلتر -->
                            <div style="display: flex; align-items: center; gap: 15px; flex-wrap: wrap;">
                                <h4 style="margin: 0; color: #333;">فلتر المنتجات:</h4>
                                <button class="filter-btn active" data-filter="all" style="padding: 8px 16px; border: 2px solid #007bff; background: transparent; color: #007bff; border-radius: 5px; cursor: pointer; transition: all 0.3s;">
                                    الكل
                                </button>
                                <button class="filter-btn" data-filter="meat" style="padding: 8px 16px; border: 2px solid #dc3545; background: transparent; color: #dc3545; border-radius: 5px; cursor: pointer; transition: all 0.3s;">
                                    لحم
                                </button>
                                <button class="filter-btn" data-filter="chicken" style="padding: 8px 16px; border: 2px solid #28a745; background: transparent; color: #28a745; border-radius: 5px; cursor: pointer; transition: all 0.3s;">
                                    دجاج
                                </button>
                                <button class="filter-btn" data-filter="mixed" style="padding: 8px 16px; border: 2px solid #ffc107; background: transparent; color: #ffc107; border-radius: 5px; cursor: pointer; transition: all 0.3s;">
                                    مشكل
                                </button>
                            </div>

                            <!-- زر التوصيل -->
                            <button  id="deliveryBtn" class="delivery-btn" style="padding: 10px 20px; background: linear-gradient(135deg, #6f42c1 0%, #5a32a3 100%); color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 600; box-shadow: 0 4px 12px rgba(111, 66, 193, 0.3); transition: all 0.3s ease;">
                                <i class="fa-solid fa-truck" style="margin-left: 8px;"></i>
                                التوصيل
                            </button>

                        </div>
                    </div>


                    <div class="List-Items" id="allProducts">
                        <partial name="_PartialProducts" model="Model.ProductGetVM" />
                    </div>

                    <!-- End List Items -->
                </section>
            </div>
        </div>
    </div>
</div>
<link href="~/lib/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />
@section Scripts {
    <script src="~/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/views/salebill.js" asp-append-version="true"></script>
    <script src="~/lib/flatpickr/dist/flatpickr.min.js"></script>
    <script>

        flatpickr("#timePicker", {
            enableTime: true,
            noCalendar: true,
            dateFormat: "h:i K",
            time_24hr: false,
            minuteIncrement: 1,
            clickOpens: false
        });

        // Pickup Time Modal Logic
        (function() {
            const timeInput = document.getElementById('timePicker');
            const timeLabel = document.querySelector('#orderDeliveredTime p');
            const modal = document.getElementById('pickupTimeModal');
            const closeBtn = document.getElementById('closePickupTimeModal');
            const cancelBtn = document.getElementById('cancelPickupTime');
            const confirmBtn = document.getElementById('confirmPickupTime');
            const hourSelect = document.getElementById('pickupHour');
            const minuteSelect = document.getElementById('pickupMinute');
            const periodSelect = document.getElementById('pickupPeriod');

            // Populate hours 1-12
            for (let h = 1; h <= 12; h++) {
                const opt = document.createElement('option');
                opt.value = h.toString().padStart(2, '0');
                opt.textContent = h.toString();
                hourSelect.appendChild(opt);
            }

            function openModalWithCurrent() {
                // Try to parse current value
                const val = (timeInput.value || '').trim();
                const match = val.match(/^(\d{1,2}):(\d{2})\s*(صباحا|مساءا|AM|PM)$/i);
                if (match) {
                    hourSelect.value = match[1].toString().padStart(2, '0');
                    minuteSelect.value = match[2];
                    const period = match[3];
                    periodSelect.value = (period.toLowerCase() === 'am' ? 'صباحا' : period.toLowerCase() === 'pm' ? 'مساءا' : period);
                } else {
                    // Default to nearest quarter of current time
                    const now = new Date();
                    let hour = now.getHours();
                    const minutes = now.getMinutes();
                    const isPM = hour >= 12;
                    hour = hour % 12;
                    if (hour === 0) hour = 12;
                    const quarters = [0, 15, 30, 45];
                    const nearest = quarters.reduce((prev, curr) => Math.abs(curr - minutes) < Math.abs(prev - minutes) ? curr : prev, 0);
                    hourSelect.value = hour.toString().padStart(2, '0');
                    minuteSelect.value = nearest.toString().padStart(2, '0');
                    periodSelect.value = isPM ? 'مساءا' : 'صباحا';
                }
                modal.style.display = 'flex';
            }

            function closeModal() {
                modal.style.display = 'none';
            }

            function applyTime() {
                const h = hourSelect.value.replace(/^0/, '') || '12';
                const m = minuteSelect.value;
                const p = periodSelect.value === 'مساءا' ? 'PM' : 'AM';
                timeInput.value = `${h}:${m} ${p}`;
                closeModal();
            }

            timeInput.addEventListener('click', openModalWithCurrent);
            timeLabel.addEventListener('click', openModalWithCurrent);
            closeBtn.addEventListener('click', closeModal);
            cancelBtn.addEventListener('click', closeModal);
            confirmBtn.addEventListener('click', applyTime);
            modal.addEventListener('click', function(e) { if (e.target === modal) closeModal(); });
        })();

        // Product Filter Functionality
        const filterButtons = document.querySelectorAll('.filter-btn');
        const allProducts = document.querySelectorAll('#allProducts .Card');

        // Store original products data
        const originalProducts = Array.from(allProducts).map(card => ({
            element: card,
            hasMeat: parseInt(card.dataset.meat) > 0,
            hasChicken: parseInt(card.dataset.chicken) > 0
        }));

        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Remove active class from all buttons
                filterButtons.forEach(btn => {
                    btn.classList.remove('active');
                });

                // Add active class to clicked button
                this.classList.add('active');

                // Filter products
                const filterType = this.dataset.filter;
                filterProducts(filterType);
            });
        });

        function filterProducts(filterType) {
            allProducts.forEach(card => {
                const hasMeat = parseInt(card.dataset.meat) > 0;
                const hasChicken = parseInt(card.dataset.chicken) > 0;
                let shouldShow = false;

                switch(filterType) {
                    case 'all':
                        shouldShow = true;
                        break;
                    case 'meat':
                        shouldShow = hasMeat && !hasChicken;
                        break;
                    case 'chicken':
                        shouldShow = hasChicken && !hasMeat;
                        break;
                    case 'mixed':
                        shouldShow = hasMeat && hasChicken;
                        break;
                }

                if (shouldShow) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Delivery Modal Functionality
        let deliveryAreas = [];
        let selectedDeliveryPrice = 0;
        let selectedDeliveryArea = '';

        // Load delivery areas from server
        async function loadDeliveryAreas() {
            try {
                const response = await fetch('/Managment/DriverPrice/GetAllAreas');
                if (response.ok) {
                    deliveryAreas = await response.json();
                    renderDeliveryAreas(deliveryAreas);
                } else {
                    console.error('Failed to load delivery areas');
                    // Fallback data for testing
                    deliveryAreas = [
                        { id: 1, region: 'الكرادة', deliveryPrice: 5000 },
                        { id: 2, region: 'الجادرية', deliveryPrice: 3000 },
                        { id: 3, region: 'المنصور', deliveryPrice: 4000 },
                        { id: 4, region: 'البياع', deliveryPrice: 6000 },
                        { id: 5, region: 'الزعفرانية', deliveryPrice: 8000 }
                    ];
                    renderDeliveryAreas(deliveryAreas);
                }
            } catch (error) {
                console.error('Error loading delivery areas:', error);
                // Fallback data for testing
                deliveryAreas = [
                    { id: 1, region: 'الكرادة', deliveryPrice: 5000 },
                    { id: 2, region: 'الجادرية', deliveryPrice: 3000 },
                    { id: 3, region: 'المنصور', deliveryPrice: 4000 },
                    { id: 4, region: 'البياع', deliveryPrice: 6000 },
                    { id: 5, region: 'الزعفرانية', deliveryPrice: 8000 }
                ];
                renderDeliveryAreas(deliveryAreas);
            }
        }

        function renderDeliveryAreas(areas) {
            const grid = document.getElementById('deliveryAreasGrid');
            grid.innerHTML = '';

            areas.forEach(area => {
                const card = document.createElement('div');
                card.className = 'delivery-area-card';
                card.innerHTML = `
                    <div class="delivery-area-name">${area.region}</div>
                    <div class="delivery-area-price">${area.deliveryPrice} دينار</div>
                `;
                card.onclick = () => selectDeliveryArea(area);
                grid.appendChild(card);
            });
        }

        function filterDeliveryAreas() {
            const searchTerm = document.getElementById('deliverySearch').value.toLowerCase();
            const filteredAreas = deliveryAreas.filter(area =>
                area.region.toLowerCase().includes(searchTerm)
            );
            renderDeliveryAreas(filteredAreas);
        }

        function selectDeliveryArea(area) {
            selectedDeliveryPrice = area.deliveryPrice;
            selectedDeliveryArea = area.region;
            document.getElementById('customerDeliveryRegion').value = area.region;
            // Close modal
            document.getElementById('deliveryModal').style.display = 'none';

            // Add delivery to bill
            addDeliveryToBill(area);
        }

        function addDeliveryToBill(area) {
            // Check if delivery already exists in bill
            const existingDelivery = document.querySelector('.delivery-item');
            if (existingDelivery) {
                existingDelivery.remove();
            }

            // Add delivery item to product list
            const productList = document.getElementById('productList');
            const deliveryItem = document.createElement('div');
            deliveryItem.className = 'delivery-item';
            deliveryItem.innerHTML = `
                <div class="item" style="display: flex; justify-content: space-between; align-items: center; padding: 10px; background: linear-gradient(135deg, #6f42c1, #5a32a3); color: white; border-radius: 8px; margin-bottom: 10px;">
                    <div style="display: flex; align-items: center;">
                        <i class="fa-solid fa-truck" style="margin-left: 10px;"></i>
                        <span>توصيل - ${area.region}</span>
                    </div>
                    <div style="display: flex; align-items: center; gap: 15px;">
                        <span class="delivery-area-price">${area.deliveryPrice} دينار</span>
                        <button onclick="removeDelivery()" style="background: rgba(255,255,255,0.2); border: none; color: white; padding: 5px 10px; border-radius: 4px; cursor: pointer;">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            productList.appendChild(deliveryItem);

            // Update total
            updateTotal();
        }

        function removeDelivery() {
            const deliveryItem = document.querySelector('.delivery-item');
            if (deliveryItem) {
                deliveryItem.remove();
                selectedDeliveryPrice = 0;
                selectedDeliveryArea = '';
                const deliveryRegionInput = document.getElementById('customerDeliveryRegion');
                if (deliveryRegionInput) {
                    deliveryRegionInput.value = '';
                }
                updateTotal();
            }
        }

        // Event listeners
        document.getElementById('deliveryBtn').addEventListener('click', function() {
            document.getElementById('deliveryModal').style.display = 'flex';
            loadDeliveryAreas();
        });

        document.getElementById('closeDeliveryModal').addEventListener('click', function() {
            document.getElementById('deliveryModal').style.display = 'none';
        });

        // Close modal when clicking outside
        document.getElementById('deliveryModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });

        // Update total function to include delivery
        function updateTotal() {
            calculateBillTotal();
        }

        // Customer Delivery Functions
        let customerDeliveryAreas = [];
        let selectedCustomerDeliveryPrice = 0;
        let selectedCustomerDeliveryArea = '';

        // Load delivery areas for customer form
        async function loadCustomerDeliveryAreas() {
            try {
                const response = await fetch('/Managment/DriverPrice/GetAllAreas');
                if (response.ok) {
                    customerDeliveryAreas = await response.json();
                    renderCustomerDeliveryAreas(customerDeliveryAreas);
                } else {
                    console.error('Failed to load delivery areas');
                    // Fallback data for testing
                    customerDeliveryAreas = [
                        { id: 1, region: 'الكرادة', deliveryPrice: 5000 },
                        { id: 2, region: 'الجادرية', deliveryPrice: 3000 },
                        { id: 3, region: 'المنصور', deliveryPrice: 4000 },
                        { id: 4, region: 'البياع', deliveryPrice: 6000 },
                        { id: 5, region: 'الزعفرانية', deliveryPrice: 8000 }
                    ];
                    renderCustomerDeliveryAreas(customerDeliveryAreas);
                }
            } catch (error) {
                console.error('Error loading delivery areas:', error);
                // Fallback data for testing
                customerDeliveryAreas = [
                    { id: 1, region: 'الكرادة', deliveryPrice: 5000 },
                    { id: 2, region: 'الجادرية', deliveryPrice: 3000 },
                    { id: 3, region: 'المنصور', deliveryPrice: 4000 },
                    { id: 4, region: 'البياع', deliveryPrice: 6000 },
                    { id: 5, region: 'الزعفرانية', deliveryPrice: 8000 }
                ];
                renderCustomerDeliveryAreas(customerDeliveryAreas);
            }
        }

        function renderCustomerDeliveryAreas(areas) {
            const grid = document.getElementById('customerDeliveryAreasGrid');
            grid.innerHTML = '';

            areas.forEach(area => {
                const card = document.createElement('div');
                card.className = 'delivery-area-card';
                card.innerHTML = `
                    <div class="delivery-area-name">${area.region}</div>
                    <div class="delivery-area-price">${area.deliveryPrice} دينار</div>
                `;
                card.onclick = () => selectCustomerDeliveryArea(area);
                grid.appendChild(card);
            });
        }

        function filterCustomerDeliveryAreas() {
            const searchTerm = document.getElementById('customerDeliverySearch').value.toLowerCase();
            const filteredAreas = customerDeliveryAreas.filter(area =>
                area.region.toLowerCase().includes(searchTerm)
            );
            renderCustomerDeliveryAreas(filteredAreas);
        }

        function selectCustomerDeliveryArea(area) {
            selectedCustomerDeliveryPrice = area.deliveryPrice;
            selectedCustomerDeliveryArea = area.region;
            // Update the customer form fields
            document.getElementById('customerDeliveryRegion').value = area.region;

            // Add delivery to bill automatically
            addDeliveryToBill(area);

            // Close modal
            document.getElementById('customerDeliveryModal').style.display = 'none';
        }

        function openDeliveryModalForCustomer() {
            document.getElementById('customerDeliveryModal').style.display = 'flex';
            loadCustomerDeliveryAreas();
        }


        // Initialize delivery time picker for customer form
        function initializeCustomerDeliveryTime() {
            const timeInput = document.getElementById('customerDeliveryTime');
            if (timeInput) {
                timeInput.addEventListener('click', function() {
                    // Open the existing pickup time modal
                    document.getElementById('pickupTimeModal').style.display = 'flex';
                });
            }
        }

        // Event listeners for customer delivery modal
        document.getElementById('closeCustomerDeliveryModal').addEventListener('click', function() {
            document.getElementById('customerDeliveryModal').style.display = 'none';
        });

        // Close modal when clicking outside
        document.getElementById('customerDeliveryModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });

        // Initialize customer delivery time picker when page loads
        document.addEventListener('DOMContentLoaded', function() {
            initializeCustomerDeliveryTime();
        });
    </script>
}


