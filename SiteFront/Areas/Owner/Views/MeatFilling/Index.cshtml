@model MeatFillingMainVM
@{
    ViewData["Title"] = "تجهيز حفر اللحم";
    int index = 1;
}

<section>
    <header>
        <div style="display: flex; align-items: center; padding: 0px 10px">
            <i class="fa-solid fa-bars-staggered menu-slider"></i>
            <h3>تجهيز حفر اللحم</h3>
        </div>
    </header>

    <!-- Search -->
    <div class="search">
        <input type="search" name="search" placeholder="بحث" />
        <button>اضافة تجهيز</button>
    </div>

    <!-- Modal for Add Product -->
    <div id="modal">
        <div class="modal-content">
            <div class="close_modal">
                <i class="fa-solid fa-xmark"></i>
            </div>
            <form method="post" id="meatFillingForm">
                <div class="form_wapper">
                    <input type="hidden" asp-for="MeatFillingRegisterVM.Id" />

                    <div class="FormControll">
                        <label asp-for="MeatFillingRegisterVM.HoleId">الحفر</label>
                        <select asp-for="MeatFillingRegisterVM.HoleId" required asp-items="@(new SelectList(Model.MeatFillingRegisterVM.Holes,"Id","Name"))">
                            <option value="">اختر الحفرة</option>
                        </select>
                    </div>
                    <div class="FormControll">
                        <label asp-for="MeatFillingRegisterVM.Date">التاريخ</label>
                        <input type="date" asp-for="MeatFillingRegisterVM.Date" required />
                    </div>
                    <div class="FormControll">
                        <label asp-for="MeatFillingRegisterVM.Nafr">عدد النفر</label>
                        <input type="text" asp-for="MeatFillingRegisterVM.Nafr" required
                               onkeypress="if (isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" />
                    </div>
                    <div class="FormControll">
                        <label asp-for="MeatFillingRegisterVM.HalfNafr">عدد نص النفر</label>
                        <input type="text" asp-for="MeatFillingRegisterVM.HalfNafr" required
                               onkeypress="if (isNaN(this.value + String.fromCharCode(event.keyCode) )) return false;" />
                    </div>
                    <div class="FormControll">
                        <label asp-for="MeatFillingRegisterVM.EndTime">وقت الفتح</label>
                        <input type="time" asp-for="MeatFillingRegisterVM.EndTime" onclick="return false;" style="cursor:pointer;" />
                    </div>
                    
                </div>
                <div class="Buttons">
                    <button type="submit">حفظ</button>
                    <button type="button">الغاء</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Pickup Time Modal for Meat Filling -->
    <div id="meatPickupTimeModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 2147483647; justify-content: center; align-items: center;">
        <div style="background: white; border-radius: 12px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 10px 30px rgba(0,0,0,0.25); position: relative; z-index: 2147483647;">
            <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:10px;">
                <h3 style="margin:0;font-size:22px;">تحديد وقت الفتح</h3>
                <button id="closeMeatPickupTimeModal" style="background:none;border:none;font-size:22px;cursor:pointer;color:#666;">
                    <i class="fa-solid fa-xmark"></i>
                </button>
            </div>
            <div style="display:flex; gap: 12px; align-items:center; justify-content:center; margin: 18px 0;">
                <select id="meatPickupHour" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;"></select>
                <span style="font-size:18px;">الساعات</span>
                <span style="font-size:18px;">:</span>
                <select id="meatPickupMinute" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;">
                    <option value="00">00</option>
                    <option value="15">15</option>
                    <option value="30">30</option>
                    <option value="45">45</option>
                </select>
                <span style="font-size:18px;">الدقائق</span>
                <select id="meatPickupPeriod" style="padding:10px 12px;border:1px solid #e0e0e0;border-radius:8px;font-size:18px;">
                    <option value="AM">صباحا</option>
                    <option value="PM">مساءا</option>
                </select>
            </div>
            <div style="display:flex; gap:10px; justify-content:flex-end;">
                <button id="confirmMeatPickupTime" style="background:#6f42c1;color:#fff;border:none;border-radius:8px;padding:10px 16px;cursor:pointer;font-size:16px;">تأكيد</button>
                <button id="cancelMeatPickupTime" style="background:#e0e0e0;color:#333;border:none;border-radius:8px;padding:10px 16px;cursor:pointer;font-size:16px;">إلغاء</button>
            </div>
        </div>
    </div>

    <!-- Tables -->
    <div class="table">
        <div class="container_table">
            <table id="myDataTable">
                <thead>
                    <tr>
                        <th>تسلسل</th>
                        <th>الحفرة</th>
                        <th>عدد النفر</th>
                        <th>عدد نص النفر</th>
                        <th>وقت الفتح</th>
                        <th>التاريخ</th>
                        <th>الحدث</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.MeatFillingGetVM)
                    {
                        <tr>
                            <td>@(index++)</td>
                            <td>@item.HoleName</td>
                            <td>@item.Nafr</td>
                            <td>@item.HalfNafr</td>
                            <td>@item.EndTime</td>
                            <td>@item.Date.ToShortDateString()</td>
                            <td>
                                <div class="container_Buttons">
                                    <button class="edit-button" data-id="@item.Id">
                                        <i class="fa-solid fa-pen-to-square"></i>
                                    </button>
                                    <a type="button" asp-action="Delete" onclick="return confirm('هل أنت متأكد من حذف هذا التجهيز؟')" asp-route-id="@item.Id">
                                        <i class="fa-solid fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
 </section>

@section Scripts {
    <script>
        // Meat Filling time modal wiring
        (function () {
            const timeInput = document.getElementById('MeatFillingRegisterVM_EndTime');
            const label = document.querySelector('label[for="MeatFillingRegisterVM_EndTime"]');
            if (!timeInput || !label) return;

            const modal = document.getElementById('meatPickupTimeModal');
            const closeBtn = document.getElementById('closeMeatPickupTimeModal');
            const cancelBtn = document.getElementById('cancelMeatPickupTime');
            const confirmBtn = document.getElementById('confirmMeatPickupTime');
            const hourSelect = document.getElementById('meatPickupHour');
            const minuteSelect = document.getElementById('meatPickupMinute');
            const periodSelect = document.getElementById('meatPickupPeriod');

            if (hourSelect && hourSelect.options.length === 0) {
                for (let h = 1; h <= 12; h++) {
                    const opt = document.createElement('option');
                    opt.value = h.toString().padStart(2, '0');
                    opt.textContent = h.toString();
                    hourSelect.appendChild(opt);
                }
            }

            function openModalWithCurrent() {
                const val = (timeInput.value || '').trim();
                const match = val.match(/^(\d{2}):(\d{2})$/);
                if (match) {
                    let h24 = parseInt(match[1], 10);
                    const m = match[2];
                    const isPM = h24 >= 12;
                    let h12 = h24 % 12; if (h12 === 0) h12 = 12;
                    hourSelect.value = h12.toString().padStart(2, '0');
                    minuteSelect.value = m;
                    periodSelect.value = isPM ? 'PM' : 'AM';
                } else {
                    const now = new Date();
                    let hour = now.getHours();
                    const minutes = now.getMinutes();
                    const isPM = hour >= 12;
                    hour = hour % 12; if (hour === 0) hour = 12;
                    const quarters = [0, 15, 30, 45];
                    const nearest = quarters.reduce((prev, curr) => Math.abs(curr - minutes) < Math.abs(prev - minutes) ? curr : prev, 0);
                    hourSelect.value = hour.toString().padStart(2, '0');
                    minuteSelect.value = nearest.toString().padStart(2, '0');
                    periodSelect.value = isPM ? 'PM' : 'AM';
                }
                modal.style.display = 'flex';
            }

            function closeModal() { modal.style.display = 'none'; }

            function applyTime() {
                const h12 = parseInt(hourSelect.value, 10);
                const m = minuteSelect.value;
                const period = periodSelect.value;
                let h24 = h12 % 12;
                if (period === 'PM') h24 += 12;
                if (period === 'AM' && h12 === 12) h24 = 0;
                timeInput.value = `${h24.toString().padStart(2,'0')}:${m}`;
                closeModal();
            }

            timeInput.addEventListener('click', (e) => { e.preventDefault(); openModalWithCurrent(); });
            label.addEventListener('click', openModalWithCurrent);
            closeBtn.addEventListener('click', closeModal);
            cancelBtn.addEventListener('click', closeModal);
            confirmBtn.addEventListener('click', applyTime);
            modal.addEventListener('click', function(e){ if (e.target === modal) closeModal(); });
        })();
        btn_add.addEventListener("click", (e) => {
            $("#MeatFillingRegisterVM_Id").val('');
            $("#MeatFillingRegisterVM_HoleId").val('');
            $("#MeatFillingRegisterVM_Nafr").val('');
            $("#MeatFillingRegisterVM_HalfNafr").val('');
            $("#MeatFillingRegisterVM_EndTime").val('');
            let today = new Date().toISOString().split('T')[0];
            $("#MeatFillingRegisterVM_Date").val(today);
        });
        $('.edit-button').on('click', function () {
            $.ajax({
                url: '/Owner/MeatFilling/GetData?id=' + $(this).data('id'),
                success: function (data) {
                    console.log(data);
                    $("#MeatFillingRegisterVM_Id").val(data.id);
                    var s = '<option value="">اختر الحفرة</option>';
                    for (var i = 0; i < data.holes.length; i++) {
                        s += '<option value="' + data.holes[i].holeId + '">' + data.holes[i].holeName + '</option>';
                    }
                    $("#MeatFillingRegisterVM_HoleId").html(s);
                    $("#MeatFillingRegisterVM_HoleId").val(data.holeId);
                    $("#MeatFillingRegisterVM_Nafr").val(data.nafr);
                    $("#MeatFillingRegisterVM_HalfNafr").val(data.halfNafr);
                    $("#MeatFillingRegisterVM_EndTime").val(data.endTime);
                    const dateValue = data.date.split('T')[0]; // Extract the date part (YYYY-MM-DD)
                    $("#MeatFillingRegisterVM_Date").val(dateValue);

                    modal.classList.add("open");
                },
                error: function () {

                }
            });

        });

        const form = document.getElementById('meatFillingForm');
        const hiddenInput = document.getElementById('MeatFillingRegisterVM_Id');

        form.addEventListener('submit', function (event) {
            if (hiddenInput.value) {
                form.action = '/Owner/MeatFilling/Edit';
            } else {
                form.action = '/Owner/MeatFilling/Create';
            }
        });


    </script>
}
